#!/bin/bash

trap ctrl_c SIGINT

function ctrl_c {
  make --no-print-directory clean && \
    echo -e "\033[1;92mPatch cleaned\033[0m" || \
    echo -e "\033[1;33mCould not clean patch\033[0m"
  exit $?
}

function watch_inotify {
  inotifywait --recursive --monitor --quiet \
    --event modify,move,create,delete,attrib \
    ${DIRECTORY_TO_OBSERVE} | awk -v SRCD="^srcd" -v SUPERSET="$(pwd)/superset" '{ \
      print $0; \
      if ($2 ~ "DELETE" || $2 ~ "MOVED_FROM") { \
        print "[deleted]: " $1$3; \
        print "rm -rf " gensub(SRCD, SUPERSET, 1, $1$3); \
        system("rm -rf " gensub(SRCD, SUPERSET, 1, $1$3)); \
      } else if ($1$3 ~ "docker-compose.override.yml") { \
        print "[docker-compose.override]: updated " $1$3; \
        system("cp -rf " $1$3 " ~/.sourced/compose-files/__active__/docker-compose.override.yml"); \
      } \
      else { \
        print "[modified]: " $1$3; \
        system("make --no-print-directory apply-patch"); \
      } \
    }';
}

function watch_fswatch {
  fswatch --recursive --event-flags \
    --event Created --event Updated --event Removed --event Renamed \
    --event MovedFrom --event MovedTo \
    --event OwnerModified --event AttributeModified \
    ${DIRECTORY_TO_OBSERVE} | awk -v SRCD="$(pwd)/srcd" -v SUPERSET="$(pwd)/superset" '{ \
      print $0; \
      if ($2 ~ "Removed") { \
        print "[deleted]: " $1; \
        print "rm -rf " gensub(SRCD, SUPERSET, 1, $1); \
        system("rm -rf " gensub(SRCD, SUPERSET, 1, $1)); \
      } else if ($1 ~ "docker-compose.override.yml") { \
        print "[docker-compose.override]: updated " $1; \
        system("cp -rf " $1 " ~/.sourced/compose-files/__active__/docker-compose.override.yml"); \
      } \
      else { \
        print "[modified]: " $1; \
        system("make --no-print-directory apply-patch"); \
      } \
    }';
}


if command -v inotifywait > /dev/null 2>&1; then
  whichWatcher=inotify
  function watcher { watch_inotify; }
elif command -v fswatch > /dev/null 2>&1; then
  whichWatcher=fswatch
  function watcher { watch_fswatch; }
else
  echo -e "\033[1;31m[ERROR] No watcher available\033[0m"
  echo "Neither 'inotify' nor 'fswatch' are available."
  echo "You can follow 'CONTRIBUTING.md' guidelines to install one of them,"
  echo ""
  echo -e "\033[1;33m[alternative]\033[0m follow these steps:"
  echo "1. run 'make set-override' first,"
  echo "2. then 'make patch' every time you change a file in 'srcd' dir"
  echo "3. and 'make clean' once you finish developing"
  echo ""
  exit 1
fi

make --no-print-directory apply-patch
echo -e "\033[1;92mWatching for changes in 'srcd'; using '${whichWatcher}' ...\033[0m"

watcher
